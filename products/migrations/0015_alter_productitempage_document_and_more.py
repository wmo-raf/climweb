# Generated by Django 4.1.7 on 2023-05-02 07:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('core', '0025_delete_theme'),
        ('products', '0014_alter_productpage_banner_subtitle_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='productitempage',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.customdocumentmodel', verbose_name='Document'),
        ),
        migrations.AlterField(
            model_name='productitempage',
            name='image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear as thumbnail', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='productitempage',
            name='month',
            field=models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], default=5, verbose_name='Month'),
        ),
        migrations.AlterField(
            model_name='productitempage',
            name='summary',
            field=wagtail.fields.RichTextField(help_text='Summary of the product release', verbose_name='Summary'),
        ),
        migrations.AlterField(
            model_name='productitempage',
            name='year',
            field=models.PositiveIntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Year'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='call_to_action_button_text',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Call to action button text'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='call_to_action_related_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Call to action related page'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='earliest_bulletin_year',
            field=models.PositiveIntegerField(default=2023, help_text='The year for the earliest available bulletin. This is used to generate the years available for filtering ', validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2023)], verbose_name='Earliest bulletin year'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='feature_block',
            field=wagtail.fields.StreamField([('feature_item', wagtail.blocks.StructBlock([('figure_type', wagtail.blocks.ChoiceBlock(choices=[('image', 'Image'), ('chart', 'Chart'), ('video', 'Video'), ('imageofchange', 'Image of Change')])), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('chart_config_url', wagtail.blocks.URLBlock(help_text='A URL that returns Highcharts.js configuration, including the data', required=False)), ('title', wagtail.blocks.CharBlock()), ('text', wagtail.blocks.TextBlock(label='Description')), ('action_link_text', wagtail.blocks.CharBlock(max_length=15, required=False)), ('action_link', wagtail.blocks.PageChooserBlock(label='Action Link Internal', required=False)), ('action_link_external', wagtail.blocks.URLBlock(help_text='An external link to a detailed resource on the internet.If provided, the internal link will be ignored', max_length=400, required=False))]))], blank=True, null=True, use_json_field=True, verbose_name='Feature block'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='introduction_button_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Introduction button link'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='introduction_button_text',
            field=models.TextField(blank=True, max_length=20, null=True, verbose_name='Introduction button text'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='introduction_text',
            field=wagtail.fields.RichTextField(help_text='A description of what your organisation does under  this Product', verbose_name='Introduction text'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='introduction_title',
            field=models.CharField(help_text='Introduction section title', max_length=100, verbose_name='Call to action related page'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='products_per_page',
            field=models.PositiveIntegerField(default=6, help_text='How many of this products should be visible on the landing page filter section ?', validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(20)], verbose_name='Products per page'),
        ),
    ]
