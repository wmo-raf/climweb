version: '3'

services:
  cms_web:
    container_name: cms_web
    build: 
        context: .
        dockerfile: Dockerfile
    restart: on-failure
    command: gunicorn nmhs_cms.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    environment: 
      - DEBUG=${DEBUG}
      - DB_PORT_CMS=${POSTGRES_PORT_CMS}
      - DB_NAME_CMS=${POSTGRES_DB_CMS}
      - DB_PASSWORD_CMS=${POSTGRES_PASSWORD_CMS}
      - DB_USER_CMS=${POSTGRES_USER_CMS}
      - DB_HOST_CMS=cms_db
      - RECAPTCHA_PUBLIC_KEY=${RECAPTCHA_PUBLIC_KEY}
      - RECAPTCHA_PRIVATE_KEY=${RECAPTCHA_PRIVATE_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE=${DATABASE}
      - MEDIA_URL=${MEDIA_URL}
      - STATIC_URL=${STATIC_URL}
      - BASE_PATH=${BASE_PATH}
      - CMS_HOST=${CMS_HOST}
    depends_on:
      - cms_db
    ports:
      - 8000:8000
    volumes:
      - static_volume:/home/app/web/static
      - ./media:/home/app/web/media
      - ./error.log:/home/app/web/error.log
      - ./cache:/home/app/web/cache
      - ./dumpdata.json:/home/app/web/dumpdata.json
     
  cms_db:
    container_name: cms_db
    image: postgis/postgis:12-master
    restart: always
    environment: 
      - POSTGRES_USER=${POSTGRES_USER_CMS}
      - POSTGRES_DB=${POSTGRES_DB_CMS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_CMS}
    ports: 
      - ${POSTGRES_PORT_CMS}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  cms_nginx:
    container_name: cms_nginx
    image: nginx:1.18.0-alpine
    volumes:
      - static_volume:/wagtail_static
      - ./media:/wagtail_media
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - mautic_data:/var/www/html

    ports:
      - ${CMS_PORT}:80
    depends_on:
      - cms_web  
      - mautic

  mauticdb:
    image: percona/percona-server:5.7
    container_name: mauticdb
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    
  mautic:
    image: mautic/mautic:v4
    container_name: mautic
    links:
      - mauticdb:mysql
    depends_on:
      - mauticdb
    ports:
      - 8080:80
    volumes:
      - mautic_data:/var/www/html
    environment:
      - MAUTIC_DB_HOST=mauticdb
      - MYSQL_PORT_3306_TCP=${MYSQL_PORT_3306_TCP}
      - MAUTIC_DB_USER=${MAUTIC_DB_USER}
      - MAUTIC_DB_PASSWORD=${MAUTIC_DB_PASSWORD}
      - MAUTIC_DB_NAME=${MAUTIC_DB_NAME}
      - MAUTIC_RUN_CRON_JOBS=${MAUTIC_RUN_CRON_JOBS}
      # - MAUTIC_TRUSTED_PROXIES: 0.0.0.0/0

  # cron:
  #   container_name: cms_cron
  #   build: .
  #   command: sh -c "python manage.py runcrons && tail -f /dev/null"
  #   volumes:
  #     - .:/home/app/web/static
  #   depends_on:
  #     - cms_db

networks:
    default:
      name:  ${AHW_DOCKER_NETWORK}
      external: true


volumes:
  postgres_data:
  static_volume:
  mysql_data:
    driver: local
  mautic_data:
    driver: local
