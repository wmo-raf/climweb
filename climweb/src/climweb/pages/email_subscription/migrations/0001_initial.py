# Generated by Django 4.2.2 on 2023-06-14 19:24

from django.db import migrations, models
import django.db.models.deletion
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('wagtailcore', '0083_workflowcontenttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='MauticMailingListSubscriptionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('mautic_form_id', models.CharField(blank=True, help_text='Form ID to use. Make sure you have created the form with all the required fields on Mautic', max_length=256, null=True, verbose_name='Mautic Form ID')),
                ('thank_you_text', models.TextField(blank=True, help_text='Message to show on successful submission', null=True)),
                ('heading', models.CharField(blank=True, help_text='Heading', max_length=255, null=True, verbose_name='Heading')),
                ('introduction_text', models.TextField(blank=True, null=True, verbose_name='Introduction text')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MailchimpMailingListSubscriptionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('list_id', models.CharField(help_text='Select MailChimp Audience to use for this form', max_length=50, verbose_name='MailChimp Audience')),
                ('double_optin', models.BooleanField(default=False, help_text='Check to use double opt-in process for new subscribers. If enabled, users must confirm their subscription via an email sent by MailChimp', verbose_name='Double Opt-In')),
                ('thank_you_text', models.TextField(blank=True, help_text='Message to show on successful submission', null=True, verbose_name='Thank you text')),
                ('heading', models.CharField(blank=True, help_text='Heading', max_length=255, null=True, verbose_name='Heading')),
                ('introduction_text', models.TextField(blank=True, null=True, verbose_name='Introduction text')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('success_redirect_page', models.ForeignKey(blank=True, help_text='Page to redirect to after successful submission.Leave unselected to show this page with an empty form', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Success Redirect Page')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
