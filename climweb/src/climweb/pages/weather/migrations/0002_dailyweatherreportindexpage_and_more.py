# Generated by Django 4.2.3 on 2024-03-15 07:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtailcache.cache
import wagtailmetadata.models


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('weather', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyWeatherReportIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction_title', models.CharField(help_text='Introduction section title', max_length=100, verbose_name='Introduction Title')),
                ('introduction_text', wagtail.fields.RichTextField(help_text='Introduction section description', verbose_name='Introduction text')),
                ('introduction_button_text', models.TextField(blank=True, max_length=20, null=True, verbose_name='Introduction button text')),
                ('introduction_button_link_external', models.URLField(blank=True, help_text='External Link if applicable. Ignored if internal page above is chosen', null=True)),
                ('weather_summary_heading', models.CharField(blank=True, default='Weather Summary for previous day', max_length=255, null=True, verbose_name='Weather summary section heading')),
                ('extremes_section_title', models.CharField(blank=True, default='Extreme weather observations', max_length=255, null=True, verbose_name='Extreme weather observations section title')),
                ('weather_forecast_heading', models.CharField(blank=True, default='Weather Forecast for next day', max_length=255, null=True, verbose_name='Weather forecast section heading')),
                ('items_per_page', models.PositiveIntegerField(default=6, help_text='Number of items to show in the list section. Default is 6. Maximum is 20.', validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(20)], verbose_name='Products per page')),
                ('introduction_button_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Introduction button link')),
                ('introduction_image', models.ForeignKey(blank=True, help_text='A high quality image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Introduction Image')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model, wagtailcache.cache.WagtailCacheMixin),
        ),
        migrations.CreateModel(
            name='DailyWeatherReportDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('issued_on', models.DateField(help_text='The date the report was issued.', verbose_name='Issued on')),
                ('summary_date', models.DateField(blank=True, null=True, verbose_name='Summary Date')),
                ('summary_description', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Weather Summary Description')),
                ('forecast_date', models.DateField(blank=True, null=True, verbose_name='Forecast Date')),
                ('forecast_description', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Weather Forecast Description')),
                ('extreme_weather_observations', wagtail.fields.StreamField([('extremes', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Weather Parameter', required=True)), ('units', wagtail.blocks.CharBlock(label='Units', required=False)), ('measurements', wagtail.blocks.StreamBlock([('measurements', wagtail.blocks.StructBlock([('station_name', wagtail.blocks.CharBlock(required=True)), ('value', wagtail.blocks.FloatBlock(required=True))], label='Measurement'))]))], label='Extreme Weather Observation'))], blank=True, null=True, use_json_field=True, verbose_name='Extreme weather observations from previous day')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model, wagtailcache.cache.WagtailCacheMixin),
        ),
    ]
