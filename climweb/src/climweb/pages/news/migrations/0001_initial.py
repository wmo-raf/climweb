# Generated by Django 4.2.2 on 2023-06-14 19:24

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('wagtailcore', '0083_workflowcontenttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_title', models.CharField(max_length=255, verbose_name='Banner Title')),
                ('banner_subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Banner Subtitle')),
                ('call_to_action_button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Call to action button text')),
                ('items_per_page', models.PositiveIntegerField(default=6, help_text='How many items should be visible on the news landing page filter section ?', validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(20)], verbose_name='Items per page')),
            ],
            options={
                'verbose_name': 'News Index Page',
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateTimeField(default=datetime.datetime.today, verbose_name='Post date')),
                ('subtitle', models.TextField(blank=True, help_text='Optional subtitle', null=True, verbose_name='Subtitle')),
                ('body', wagtail.fields.RichTextField(verbose_name='Body')),
                ('feature_img_src', models.TextField(blank=True, null=True, verbose_name='Feature Image')),
                ('is_featured', models.BooleanField(default=False, help_text='Should this news appear on the news landing paging as the featured one ?', verbose_name='Is featured')),
                ('is_alert', models.BooleanField(default=False, help_text='Is this an alert ?', verbose_name='Is alert')),
                ('is_visible_on_homepage', models.BooleanField(default=False, help_text='Should this appear in the homepage as an alert/latest update ?', verbose_name='Is visible on homepage')),
                ('extra_links_heading', models.CharField(blank=True, max_length=255, null=True, verbose_name='Extra links heading')),
                ('external_links', wagtail.fields.StreamField([('link', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=255)), ('link', wagtail.blocks.URLBlock(max_length=255))]))], blank=True, null=True, use_json_field=True, verbose_name='Extra links')),
            ],
            options={
                'verbose_name': 'News Page',
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('is_alert', models.BooleanField(default=False, verbose_name='Is alert')),
                ('is_press_release', models.BooleanField(default=False, verbose_name='Is press release')),
            ],
            options={
                'verbose_name': 'News Type',
                'verbose_name_plural': 'News Types',
            },
        ),
        migrations.CreateModel(
            name='NewsPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_tags', to='news.newspage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='newspage',
            name='news_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='news.newstype', verbose_name='News type'),
        ),
    ]
