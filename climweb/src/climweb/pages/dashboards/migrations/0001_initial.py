# Generated by Django 5.2.1 on 2025-06-30 07:55

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('dashboards', '0001_initial'), ('dashboards', '0002_alter_dashboardpage_options_and_more'), ('dashboards', '0003_alter_dashboardpage_body'), ('dashboards', '0004_alter_dashboardpage_body'), ('dashboards', '0005_alter_dashboardpage_body_chartsnippet'), ('dashboards', '0006_alter_chartsnippet_options'), ('dashboards', '0007_alter_dashboardpage_body_dashboardmap'), ('dashboards', '0008_alter_dashboardpage_body'), ('dashboards', '0009_alter_dashboardpage_body'), ('dashboards', '0010_dashboardindexpage'), ('dashboards', '0011_rename_dashboardindexpage_dashboardgallerypage_and_more'), ('dashboards', '0012_remove_dashboardmap_dataset_dashboardmap_map_layer'), ('dashboards', '0013_alter_dashboardmap_map_layer'), ('dashboards', '0014_alter_dashboardmap_map_layer'), ('dashboards', '0015_chartsnippet_chart_color_chartsnippet_data_unit')]

    dependencies = [
        ('geomanager', '0052_remove_rasterstyle_rendering_engine'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_title', models.CharField(blank=True, max_length=255)),
                ('banner_description', models.TextField(blank=True)),
                ('banner_background_color', models.CharField(default='#f5f5f5', help_text='Hex color code for banner background (e.g., #ffffff)', max_length=7)),
                ('body', wagtail.fields.StreamField([('section', 8)], block_lookup={0: ('wagtail.blocks.CharBlock', (), {'required': True}), 1: ('wagtail.snippets.blocks.SnippetChooserBlock', (), {'target_model': 'dashboards.ChartSnippet'}), 2: ('wagtail.blocks.ListBlock', (1,), {}), 3: ('wagtail.blocks.StructBlock', [[('charts_block', 2)]], {}), 4: ('wagtail.snippets.blocks.SnippetChooserBlock', (), {'target_model': 'dashboards.DashboardMap'}), 5: ('wagtail.blocks.ListBlock', (4,), {}), 6: ('wagtail.blocks.StructBlock', [[('maps_block', 5)]], {}), 7: ('wagtail.blocks.StreamBlock', [[('charts', 3), ('maps', 6)]], {'required': True}), 8: ('wagtail.blocks.StructBlock', [[('section_title', 0), ('content', 7)]], {})})),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Dashboard Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DashboardGalleryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'verbose_name': 'Dashboards Gallery',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DashboardMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('map_layer', wagtail.fields.StreamField([('raster_file_layer', 0), ('wms_layer', 1), ('vector_tile_layer', 2)], block_lookup={0: ('climweb.base.blocks.UUIDModelChooserBlock', (), {'icon': 'map', 'target_model': 'geomanager.rasterfilelayer'}), 1: ('climweb.base.blocks.UUIDModelChooserBlock', (), {'icon': 'map', 'target_model': 'geomanager.wmslayer'}), 2: ('climweb.base.blocks.UUIDModelChooserBlock', (), {'icon': 'map', 'target_model': 'geomanager.vectortilelayer'})}, null=True, verbose_name='Map Layers')),
            ],
            options={
                'verbose_name': 'Dashboard Map',
                'verbose_name_plural': 'Dashboard Maps',
            },
        ),
        migrations.CreateModel(
            name='ChartSnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('chart_type', models.CharField(choices=[('line', 'Line Chart'), ('bar', 'Bar Chart')], default='line', max_length=10)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charts', to='geomanager.rasterfilelayer')),
                ('chart_color', models.CharField(default='#0b76e1', help_text='Hex color code for chart color (e.g., #0b76e1)', max_length=7)),
                ('data_unit', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Dashboard Chart',
                'verbose_name_plural': 'Dashboard Charts',
            },
        ),
    ]
