# Generated by Django 4.1.9 on 2023-07-06 15:00

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('wagtailcore', '0083_workflowcontenttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_title', models.CharField(max_length=255, verbose_name='Banner Title')),
                ('banner_subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Banner Subtitle')),
                ('call_to_action_button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Call to action button text')),
                ('content', wagtail.fields.StreamField([('title_text', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Section title', max_length=100, verbose_name='Section Title')), ('text', wagtail.blocks.RichTextBlock(features=['bold', 'ul', 'ol', 'link', 'superscript', 'subscript'], help_text='Section description', verbose_name='Section Text'))])), ('title_text_image', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Section title', max_length=100, verbose_name='Section Title')), ('text', wagtail.blocks.RichTextBlock(features=['bold', 'ul', 'ol', 'link', 'superscript', 'subscript'], help_text='Section description', verbose_name='Section Text')), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))])), ('accordion', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('collapsibles', wagtail.blocks.StreamBlock([('collapsibles', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock()), ('description', wagtail.blocks.RichTextBlock(features=['bold', 'ul', 'ol', 'link', 'superscript', 'subscript'])), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))]))])), ('table', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'colHeaders': False, 'rowHeaders': False}))]))], blank=True, null=True, use_json_field=True)),
                ('banner_image', models.ForeignKey(blank=True, help_text='A high quality banner image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Banner Image')),
                ('call_to_action_related_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Call to action related page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Flex Page',
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
