# Generated by Django 4.2.18 on 2025-04-01 09:07

from django.db import migrations, models
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0021_homepage_call_to_action_button_text_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='homemapsettings',
            name='location_forecat_date_display_format',
            field=models.CharField(choices=[('yyyy-MM-dd HH:mm', 'Hour minute:second - (E.g 2023-01-01 00:00)'), ('iii d HH:mm', 'Day of Week Day - (E.g Tue 25 08:00)'), ('yyyy-MM-dd', 'Day - (E.g 2023-01-01)')], default='yyyy-MM-dd HH:mm', help_text='Location Forecast Date Display Format', max_length=100),
        ),
        migrations.AddField(
            model_name='homemapsettings',
            name='map_layers',
            field=wagtail.fields.StreamField([('raster_file_layer', 3), ('wms_layer', 5)], blank=True, block_lookup={0: ('climweb.base.blocks.UUIDModelChooserBlock', (), {'icon': 'map', 'target_model': 'geomanager.rasterfilelayer'}), 1: ('wagtailiconchooser.blocks.IconChooserBlock', (), {'default': 'layer-group', 'label': 'Icon', 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Name to display on the map. Leave blank to use the original layer name', 'max_length': 100, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('layer', 0), ('icon', 1), ('display_name', 2)]], {'icon': 'map', 'label': 'Raster Layer'}), 4: ('climweb.base.blocks.UUIDModelChooserBlock', (), {'icon': 'map', 'target_model': 'geomanager.wmslayer'}), 5: ('wagtail.blocks.StructBlock', [[('layer', 4), ('icon', 1), ('display_name', 2)]], {'icon': 'map', 'label': 'Raster Layer'})}, null=True, verbose_name='Map Layers'),
        ),
        migrations.AddField(
            model_name='homemapsettings',
            name='show_location_forecast_layer',
            field=models.BooleanField(default=True, verbose_name='Show Location forecast Layer'),
        ),
        migrations.AddField(
            model_name='homemapsettings',
            name='show_warnings_layer',
            field=models.BooleanField(default=True, verbose_name='Show CAP Warnings Layer'),
        ),
    ]
